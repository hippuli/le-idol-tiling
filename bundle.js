(()=>{"use strict";function e(e){return e.shape.reduce((function(e,n){return e+n.length}),0)}function n(e,n,r,t){for(var o=0;o<n.shape.length;o++)for(var a=0;a<n.shape[o].length;a++)if(1===n.shape[o][a]){var c=r+o,i=t+a;if(c>=e.length||i>=e[0].length)return!1;if(0!==e[c][i])return!1}return!0}function r(e,n,r,t,o){for(var a=0;a<n.shape.length;a++)for(var c=0;c<n.shape[a].length;c++)if(1===n.shape[a][c]){if(0!==e[r+a][t+c])throw new Error("Trying to place piece on occupied cell");e[r+a][t+c]=o}}function t(e,n,r,t,o){for(var a=0;a<n.shape.length;a++)for(var c=0;c<n.shape[a].length;c++)if(1===n.shape[a][c]){if(e[r+a][t+c]!==o)throw new Error("Trying to remove piece from unoccupied cell");e[r+a][t+c]=0}}var o=[[-1,0,0,0,-1],[0,0,0,0,0],[0,0,-1,0,0],[0,0,0,0,0],[-1,0,0,0,-1]],a=o.reduce((function(e,n){return e+n.filter((function(e){return 0===e})).length}),0),c={},i=function(){return i=Object.assign||function(e){for(var n,r=1,t=arguments.length;r<t;r++)for(var o in n=arguments[r])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},i.apply(this,arguments)},l={piece1x1:{shape:[[1]]},piece1x2:{shape:[[1],[1]]},piece2x1:{shape:[[1,1]]},piece2x2:{shape:[[1,1],[1,1]]},piece1x3:{shape:[[1],[1],[1]]},piece3x1:{shape:[[1,1,1]]},piece1x4:{shape:[[1],[1],[1],[1]]},piece4x1:{shape:[[1,1,1,1]]}};function u(e,o,a){var i;if(void 0===a&&(a=0),a>=o.length)return!0;for(var l=o[a],f=null!==(i=l.name)&&void 0!==i?i:"",s=0,p=c[f];s<p.length;s++){var h=p[s],d=h[0],v=h[1];if(n(e,l,d,v)){if(r(e,l,d,v,a+1),u(e,o,a+1))return!0;t(e,l,d,v,a+1)}}return!1}document.addEventListener("DOMContentLoaded",(function(){var r;!function(e){var n=document.querySelector(".grid");if(n){n.innerHTML="";for(var r=0;r<e.length;r++)for(var t=0;t<e[r].length;t++){var o=document.createElement("div");o.className="cell",e[r][t]<0&&o.classList.add("blocked"),n.appendChild(o)}}}(o),function(e){var n=document.querySelector(".pieces");if(n){n.innerHTML="";for(var r=1,t=0,o=Object.entries(e);t<o.length;t++){var a=o[t],c=a[0],i=(a[1],document.createElement("div"));i.className="piece-container";var l=document.createElement("label"),u=document.createElement("span");u.className="piece ".concat(c);var f=document.createElement("input");f.type="number",f.min="0",f.value="0",f.className="piece-quantity",f.id="".concat(c,"-qty"),f.tabIndex=r++,l.appendChild(u),l.appendChild(f),i.appendChild(l),n.appendChild(i)}}}(l),function(e){console.log("initializing lookup tables");for(var r=0,t=Object.entries(e);r<t.length;r++){for(var a=t[r],i=a[0],l=a[1],u=[],f=0;f<o.length;f++)for(var s=0;s<o[f].length;s++)n(o,l,f,s)&&u.push([f,s]);c[i]=u}}(l),null===(r=document.getElementById("solve-btn"))||void 0===r||r.addEventListener("click",(function(){var n,r;console.log("solving..."),function(){for(var e=0;e<o.length;e++)for(var n=0;n<o[e].length;n++)o[e][n]>0&&(o[e][n]=0)}(),(n=document.querySelector(".grid"))&&n.querySelectorAll(".cell").forEach((function(e){var n=e.querySelector(".cell-content");n&&e.removeChild(n)}));try{var t=(r=function(){for(var n=[],r=0,t=0,o=Object.entries(l);t<o.length;t++){var c=o[t],i=c[0],u=c[1],f=document.getElementById("".concat(i,"-qty")),s=parseInt(f.value,10);if((r+=e(u)*s)>a)throw new Error("Total size of pieces exceeds grid size");for(var p=0;p<s;p++)n.push(u)}return n.sort((function(n,r){return e(r)-e(n)})),n}(),r.map((function(e){var n=JSON.stringify(e.shape),r=Object.keys(l).find((function(e){return JSON.stringify(l[e].shape)===n}));if(r)return i(i({},e),{name:r});throw new Error("No matching piece found for shape: ".concat(n))})));u(o,t)?function(){var e=document.querySelector(".grid");if(e)for(var n=e.querySelectorAll(".cell"),r=0;r<o.length;r++)for(var t=0;t<o[r].length;t++){var a=n[r*o[r].length+t];if(o[r][t]>0){var c=document.createElement("span");c.className="cell-content",c.innerHTML=o[r][t].toString(),a.appendChild(c)}}}():console.log("No solution found")}catch(e){return void console.error(e)}}))}))})();